#! /usr/bin/env bash

panic()
{
	echo "ERROR: $@"
	exit 1
}

usage()
{
	echo "BAD USAGE: $@"
	exit 2
}

user=$(whoami) || panic "cannot get user name"
host=$(hostname) || panic "cannot get host name"
cur_dir=$(pwd) || panic "cannot get current directory"

#version=master
install_dir=

while getopts d:v: opt; do
	case "$opt" in
	d)
		install_dir="$OPTARG";;
	v)
		version="$OPTARG";;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no installation directory specified"
fi
#if [ -z "$version" ]; then
#	usage "no version specified"
#fi

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

#tmp_dir="/tmp/sde_install_gcovr-$user@$host-$$"
url="https://github.com/gcovr/gcovr.git"

#mkdir -p "$tmp_dir" || panic "cannot make temporary directory $tmp_dir"

pip install --prefix="$install_dir/supplemental" git+${url} || \
  panic "pip install failed"

bin_dir="$install_dir/bin"
aux_dir="$install_dir/supplemental"

mkdir "$bin_dir" || panic "cannot make bin directory"

gcovr_wrapper="$bin_dir/gcovr"

cat > "$gcovr_wrapper" << EOF
#! /usr/bin/env bash
cmd_program=\$(readlink -f "\$0") || exit 1
cmd_dir=\$(dirname "\$cmd_program") || exit 1
aux_dir="\$cmd_dir/../supplemental"
export PYTHONPATH="\$aux_dir/lib/python2.7/site-packages:\$aux_dir/lib64/python2.7/site-packages"
exec \$aux_dir/bin/gcovr "\$@"
EOF

chmod a+rx "$install_dir/bin/gcovr" || panic
