#! /usr/bin/env bash

panic()
{
	echo "FATAL ERROR: $@" 1>&2
	exit 1
}

usage()
{
	echo "BAD USAGE: $@" 1>&2
	cat <<- EOF
	usage: $0 -d top_dir
	EOF
	exit 2
}

eprint()
{
	echo "$@" 1>&2
}

cmd_dir=`dirname $0` || panic "cannot get command directory"

default_environment=
sde_top_dir=""

while getopts d:e: opt; do
	case "$opt" in
	d)
		sde_top_dir="$OPTARG";;
	e)
		default_environment="$OPTARG";;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$sde_top_dir" ]; then
	usage "no top directory specified"
fi

if [ ! -d "$sde_top_dir" ]; then
	panic "invalid top directory specified $sde_top_dir"
fi

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

#default_environment_file="$sde_top_dir/etc/default_environment"
sde_cmd="$cmd_dir/sde"

for dir in bin etc environments; do
	if [ ! -d "$sde_top_dir/$dir" ]; then
		mkdir -p "$sde_top_dir/$dir" || \
		  panic "cannot make directory $dir"
	fi
done

# non-executables in $sde_top_dir directory
for file in README; do
	echo "installing $file in $sde_top_dir"
	install -m a+r $cmd_dir/$file $sde_top_dir/$file || \
	  panic "cannot install $file"
done

# non-executables in $sde_top_dir/etc directory
for file in motd; do
	echo "installing $file in $sde_top_dir/etc"
	install -m a+r "$cmd_dir/$file" "$sde_top_dir/etc" || \
	  panic "cannot install $file"
done

# executables in $sde_top_dir/bin directory
for file in sde_shell sde_make_setup wrapper sde sde_env sde_pkg sde_ycmconf; do
	echo "installing $file in $sde_top_dir/bin"
	install -m a+rx $cmd_dir/$file $sde_top_dir/bin || \
	  panic "cannot install $file"
done

for file in c++ g++ clang++ cc gcc clang cmake ctest cpack gdb; do
	target_file="$sde_top_dir/bin/$file"
	if [ -L "$target_file" -o -e "$target_file" ]; then
		rm -f "$target_file" || panic "cannot remove file $target_file"
	fi
	ln -s wrapper "$target_file" || \
	  panic "cannot link"
done

# non-executables in $sde_top_dir/bin directory
for file in sde_shell_bashrc; do
	echo "installing $file in $sde_top_dir/bin"
	install -m a+r $cmd_dir/$file $sde_top_dir/bin || \
	  panic "cannot install $file"
done

for file in $cmd_dir/../environments/*; do
	file=$(basename "$file") || panic "cannot get basename"
	install -m a+r \
	  "$cmd_dir/../environments/$file" "$sde_top_dir/environments" || \
	  panic "cannot install $file"
done

if [ -n "$default_environment" ]; then
	"$sde_cmd" env -d "$sde_top_dir" "$default_environment" || \
	  panic "cannot set default environment"
fi
#if [ -f "$default_environment_file" ]; then
#	rm -f "$default_environment_file" || \
#	  panic "cannot remove file $default_environment_file"
#fi
#if [ -n "$default_environment" ]; then
#	echo "$default_environment" > "$default_environment_file"
#fi

# executables in $sde_top_dir/root/usr/bin directory
#for file in gcc g++ gdb; do
#	echo "installing $file in $sde_top_dir/root/usr/bin"
#	install -m a+rx $cmd_dir/$file $sde_top_dir/root/usr/bin || \
#	  panic "cannot install $file"
#done

