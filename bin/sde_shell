#! /usr/bin/env bash

panic()
{
	echo "FATAL ERROR: $@" 1>&2
	exit 1
}

eprint()
{
	echo "$@" 1>&2
}

usage()
{
	echo "$@"
	cat <<- EOF
	usage: $0 [options]
	options:
	-n env
	    Set the environment to env.
	EOF
	exit 2
}

cmd_dir=`dirname $0` || panic "cannot get command directory"
top_dir="$cmd_dir/.."
bashrc="$cmd_dir/sde_shell_bashrc"
setup="$cmd_dir/sde_setup"
make_setup="$cmd_dir/sde_make_setup"

name=
while getopts n: opt; do
	case "$opt" in
	n)
		name="$OPTARG";;
	esac
done
shift $((OPTIND - 1))

if [ $# -ne 0 ]; then
	usage "unexpected arguments $@"
fi

shell=`basename "$SHELL"` || panic "cannot get shell"

make_setup_opts=()
if [ -n "$name" ]; then
	make_setup_opts+=(-n "$name")
fi
#eval $($make_setup "${make_setup_opts[@]}" -s bash) || panic "eval failed"
buffer=$($make_setup "${make_setup_opts[@]}" -s bash) || \
  panic "sde_make_setup failed"
eval "$buffer" || panic "eval failed"

motd_file="$top_dir/etc/motd"
if [ -f "$motd_file" ]; then
	cat "$motd_file"
fi

case "$shell" in
bash)
	"$SHELL" --init-file $bashrc -i
	;;
csh|tcsh)
	"$shell" -i
	;;
*)
	eprint "The shell $SHELL is not supported."
	bash=`which bash` || panic "cannot find bash shell"
	eprint "Using shell $bash instead."
	eprint "It is recommended that you ask the system administrator to change your login shell to bash."
	"$bash" --init-file $bashrc -i
	;;
esac
