#! /usr/bin/env bash

# Reference: https://www.gnu.org/software/gcc/svn.html
# Reference: https://gcc.gnu.org/wiki/HomePage
# Reference: https://d-meiser.github.io/2015/11/30/building-gcc-trunk.html
# Reference: http://www.linuxfromscratch.org/blfs/view/cvs/general/gcc.html

# Note: The GCC build process cannot seem to handle "@" characters
# in pathnames.

panic()
{
	echo "ERROR"
	exit 1
}

usage()
{
	echo "bad usage: $@"
	cat <<- EOF
	$0 [options] -v \$version -d \$install_dir

	options:
	-d \$install_dir
	    Set the installation directory to \$install_dir.
	-v \$version
	    Set the version to install to \$version.
	-r
	    Install from GNU GCC Subversion repository.
	-j \$num_jobs
	    Allow the use of \$num_jobs simultaneous jobs.

	examples:
	$0 -v 8.2.0 -d $HOME/local/gcc
	$0 -r -v tags/gcc_8_2_0_release -d $HOME/local/gcc
	$0 -r -v branches/c++-modules -d $HOME/local/gcc
	$0 -r -v trunk -d $HOME/local/gcc
	EOF
	exit 2
}

user=$(whoami) || panic "cannot get user name"
host=$(hostname) || panic "cannot get host name"
cur_dir=$(pwd) || panic "cannot get current directory"

version=
install_dir=
from_repo=0

# Do not use user@host in the following pathname, since the GCC build
# process cannot seem to handle "@" characters in pathnames.
tmp_dir="${TMPDIR:-/tmp}/sde_install_gcc-$user-$host-$$"

old_abi=0
num_jobs=4

while getopts d:v:o:rj: opt; do
	case "$opt" in
	d)
		install_dir="$OPTARG";;
	v)
		version="$OPTARG";;
	o)
		case "$OPTARG" in
		old_abi)
			old_abi=1;;
		new_abi)
			old_abi=0;;
		*)
			usage;;
		esac
		;;
	r)
		from_repo=1
		;;
	j)
		num_jobs="$OPTARG";;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no installation directory specified"
fi
if [ -z "$version" ]; then
	usage "no version specified"
fi

abs_install_dir=$(readlink -f "$install_dir") || \
  panic "cannot get absolute pathname"

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

make_opts=()
make_opts+=("-j$num_jobs")

mangled_version=$(echo "$version" | tr '/' '-') || panic
top_dir="$tmp_dir/gcc-$mangled_version"
src_dir="$top_dir/src"
build_dir="$top_dir/build"
archive_dir="$top_dir/archive"
svn_dir="$top_dir/svn"

for dir in "$top_dir" "$archive_dir" "$src_dir" "$build_dir"; do
	if [ ! -d "$dir" ]; then
		mkdir -p "$dir" || panic "cannot make directory $dir"
	fi
done

#unset INCLUDE_PATH CPLUS_INCLUDE_PATH CFLAGS CXXFLAGS

if [ $from_repo -ne 0 ]; then
	svn_repo="svn://gcc.gnu.org/svn/gcc/$version"
	svn co "$svn_repo" "$src_dir" || panic "cannot checkout source"
else
	url="https://ftp.gnu.org/gnu/gcc/gcc-$version/gcc-$version.tar.xz"
	(cd "$archive_dir" && wget "$url" ) || \
	  panic "cannot download archive"
	archive_file="$archive_dir/gcc-$version.tar.xz"
	tar -xJf "$archive_file" -C "$src_dir" --strip-components=1 || \
	  panic "cannot extract archive"
fi

(cd "$src_dir" && ./contrib/download_prerequisites) || \
  panic "cannot download prerequisites"

options=()
if [ "$old_abi" -ne 0 ]; then
	options+=(--with-default-libstdcxx-abi=gcc4-compatible)
fi
options+=(--enable-threads=posix)
options+=(--enable-tls)
options+=(--disable-multilib)
(cd "$build_dir" && 
  ../src/configure --prefix="$abs_install_dir" "${options[@]}") || \
  panic "configure failed"

(cd "$build_dir" && make "${make_opts[@]}") || \
  panic "make failed"

(cd "$build_dir" && make install) || \
  panic "make install failed"

rm -rf "$tmp_dir" || panic "cannot remove temporary directory $tmp_dir"

exit 0
