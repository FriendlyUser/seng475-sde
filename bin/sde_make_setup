#! /usr/bin/env bash

panic()
{
	echo "FATAL ERROR: $@" 1>&2
	exit 1
}

eecho()
{
	echo "$@" 1>&2
}

add_to_path()
{
	if [ $# -ne 3 ]; then
		return 1
	fi
	local path="$1"
	local prefix="$2"
	local suffix="$3"
	if [ -n "$prefix" ]; then
		if [ -n "$path" ]; then
			path="$prefix:$path"
		else
			path="$prefix"
		fi
	fi
	if [ -n "$suffix" ]; then
		if [ -n "$path" ]; then
			path="$path:$suffix"
		else
			path="$suffix"
		fi
	fi
	echo "$path"
}

bash_setup()
{
	echo 'export SDE_NAME='"$sde_name"';' || return 1
	echo 'export SDE_TOP_DIR='"$sde_top_dir"';' || return 1

	local path=`add_to_path "$PATH" "$sde_path_prefix" "$sde_path_suffix"` || \
	  return 1
	echo 'export PATH='\"$path\"';' || \
	  return 1

	# GNU C++ compiler
	echo 'export SDE_GCC_CXX_PROGRAM='"$sde_gcc_cxx_program"';' || \
	  return 1
	echo 'export SDE_GCC_CXX_TRANSFORM='\""$sde_gcc_cxx_transform"\"';' || \
	  return 1
	if [ ${sde_gcc_cxx_transform:-0} -ne 0 ]; then
		echo 'export SDE_GCC_CXX_OPTIONS_PREFIX='\""$sde_gcc_cxx_options_prefix"\"';' || \
		  return 1
		echo 'export SDE_GCC_CXX_OPTIONS_SUFFIX='\""$sde_gcc_cxx_options_suffix"\"';' || \
		  return 1
	fi

	# GNU C compiler
	echo 'export SDE_GCC_C_PROGRAM='"$sde_gcc_c_program"';' || \
	  return 1
	echo 'export SDE_GCC_C_TRANSFORM='\""$sde_gcc_c_transform"\"';' || \
	  return 1
	if [ ${sde_gcc_c_transform:-0} -ne 0 ]; then
		echo 'export SDE_GCC_C_OPTIONS_PREFIX='\""$sde_gcc_c_options_prefix"\"';' || \
		  return 1
		echo 'export SDE_GCC_C_OPTIONS_SUFFIX='\""$sde_gcc_c_options_suffix"\"';' || \
		  return 1
	fi

	# Clang C++ compiler
	echo 'export SDE_CLANG_CXX_PROGRAM='"$sde_clang_cxx_program"';' || \
	  return 1
	echo 'export SDE_CLANG_CXX_TRANSFORM='\""$sde_clang_cxx_transform"\"';' || \
	  return 1
	if [ ${sde_clang_cxx_transform:-0} -ne 0 ]; then
		echo 'export SDE_CLANG_CXX_OPTIONS_PREFIX='\""$sde_clang_cxx_options_prefix"\"';' || \
		  return 1
		echo 'export SDE_CLANG_CXX_OPTIONS_SUFFIX='\""$sde_clang_cxx_options_suffix"\"';' || \
		  return 1
	fi

	# Clang C compiler
	echo 'export SDE_CLANG_C_PROGRAM='"$sde_clang_c_program"';' || \
	  return 1
	echo 'export SDE_CLANG_C_TRANSFORM='\""$sde_clang_c_transform"\"';' || \
	  return 1
	if [ ${sde_clang_c_transform:-0} -ne 0 ]; then
		echo 'export SDE_CLANG_C_OPTIONS_PREFIX='\""$sde_clang_c_options_prefix"\"';' || \
		  return 1
		echo 'export SDE_CLANG_C_OPTIONS_SUFFIX='\""$sde_clang_c_options_suffix"\"';' || \
		  return 1
	fi

	# CMake
	echo 'export SDE_CMAKE_PROGRAM='"$sde_cmake_program"';' || \
	  return 1
	echo 'export SDE_CMAKE_TRANSFORM='"$sde_cmake_transform"';' || \
	  return 1
	if [ ${sde_cmake_transform:-0} -ne 0 ]; then
		echo 'export SDE_CMAKE_PREFIX_PATH='"$sde_cmake_prefix_path"';' || \
		  return 1
	fi

	# CXX and CC environment variables
	echo 'export SDE_CXX='"$SDE_GCC_CXX_PROGRAM"';' || \
	  return 1
	echo 'export SDE_CC='"$SDE_GCC_CC_PROGRAM"';' || \
	  return 1

	echo 'export SDE_GDB_PROGRAM='"$sde_gdb_program"';' || \
	  return 1

	local path=`add_to_path "$LD_LIBRARY_PATH" "$sde_ld_library_path_prefix" \
	  "$sde_ld_library_path_suffix"` || return 1
	echo 'export LD_LIBRARY_PATH='\"$path\"';' || \
	  return 1
}

tcsh_setup()
{
	echo 'setenv SDE_NAME '"$SDE_NAME"';' || return 1
	echo 'setenv SDE_TOP_DIR '"$SDE_TOP_DIR"';' || return 1

	local path=`add_to_path "$PATH" "$SDE_PATH_PREFIX" "$SDE_PATH_SUFFIX"` || \
	  return 1
	echo 'setenv PATH '\"$path\"';' || return 1

	echo 'setenv SDE_CXX '"$SDE_CXX"';' || \
	  return 1
	echo 'setenv SDE_CXX_OPTIONS_PREFIX '\""$SDE_CXX_OPTIONS_PREFIX"\"';' || \
	  return 1
	echo 'setenv SDE_CXX_OPTIONS_SUFFIX '\""$SDE_CXX_OPTIONS_SUFFIX"\"';' || \
	  return 1
	echo 'setenv CXX '"$SDE_CXX"';' || \
	  return 1

	echo 'setenv SDE_CC '"$SDE_CC"';' || \
	  return 1
	echo 'setenv SDE_CC_OPTIONS_PREFIX '\""$SDE_CC_OPTIONS_PREFIX"\"';' || \
	  return 1
	echo 'setenv SDE_CC_OPTIONS_SUFFIX '\""$SDE_CC_OPTIONS_SUFFIX"\"';' || \
	  return 1
	echo 'setenv CC '"$SDE_CC"';' || \
	  return 1

	echo 'setenv SDE_DB '"$SDE_DB"';' || \
	  return 1

	local path=`add_to_path "$LD_LIBRARY_PATH" "$SDE_LD_LIBRARY_PATH_PREFIX" \
	  "$SDE_LD_LIBRARY_PATH_SUFFIX"` || return 1
	echo 'setenv LD_LIBRARY_PATH '\"$path\"';' || \
	  return 1
}

usage()
{
	echo "$@"
	cat <<- EOF
	usage: $0 [options]
	options:
	-n env
	    Set the environment to env.
	-s shell
	    Set the shell to shell.
	-v
	    Increase the verbosity level of output.
	-f
	    Allow use of command from within SDE environment.
	EOF
	exit 2
}

cmd_dir=$(dirname "$0") || panic "cannot get command directory"
top_dir="$cmd_dir/.."
default_environment_file="$top_dir/etc/default_environment"

verbose=0
shell=bash
name=
force=0

while getopts vn:s:f opt; do
	case "$opt" in
	n)
		name="$OPTARG";;
	s)
		shell="$OPTARG";;
	f)
		force=1;;
	v)
		verbose=1;;
	*)
		usage "invalid option $opt";;
	esac
done
shift $((OPTIND - 1))

if [ $# -ne 0 ]; then
	usage "unexpected arguments $@"
fi

if [ -n "$SDE_NAME" -a "$force" -eq 0 ]; then
	panic "invoking from within SDE environment disallowed"
fi

if [ -z "$name" ]; then
	name=$(cat "$default_environment_file" 2> /dev/null) || \
	  panic "cannot determine default environment"
fi

case "$SHELL" in
*bash*)
	shell=bash;;
*tcsh*)
	shell=tcsh;;
esac

cmd_dir=$(dirname "$0") || panic "cannot get directory name"
abs_cmd_dir=$(readlink -f "$cmd_dir") || \
  panic "cannot get canonical directory name"

sde_top_dir="$abs_cmd_dir/.."
sde_top_dir=$(readlink -f "$sde_top_dir") || panic "readlink failed"

sde_name="$name"

# Establish defaults.
sde_path_prefix="$sde_top_dir/bin"

# Read settings from configuration file.
config_file="$cmd_dir/../etc/environments/$name"
if [ ! -f "$config_file" ]; then
	panic "no such environment $name"
fi
source "$config_file" || panic "source of configuration file failed"

if [ $verbose -ne 0 ]; then
	eecho "name $name"
	eecho "shell $shell"
fi

case "$shell" in
bash)
	bash_setup;;
tcsh)
	tcsh_setup;;
*)
	panic "Unsupported shell $shell";;
esac

exit

