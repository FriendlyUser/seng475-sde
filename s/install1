#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2017, 2018 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

################################################################################
# Specify the versions of various software packages to be installed.
################################################################################

# CMake: https://cmake.org/download
cmake_version=3.13.2
# GCC: https://www.gnu.org/software/gcc
gcc_version=8.2.0
# LLVM: http://releases.llvm.org/download.html
clang_version=7.0.1
# JasPer: https://www.ece.uvic.ca/~frodo/jasper/#download
jasper_version=2.0.14
# GDB: https://www.gnu.org/software/gdb/download/
gdb_version=8.2.1
# SPL: http://www.ece.uvic.ca/~frodo/SPL/#download
spl_version=2.0.7
# Ndiff: ???
ndiff_version=2.00
# TeX Live: https://www.tug.org/texlive/acquire.html
texlive_version=2018
# Boost: https://www.boost.org/users/download
boost_version=1.69.0
# CGAL: https://github.com/CGAL/cgal/releases
cgal_version=4.13
# Aristotle: https://github.com/mdadams/aristotle
aristotle_version=2.67.0
# YCM: https://github.com/Valloric/YouCompleteMe
ycm_version=c209cdbbfcc90c9ab8fa078beb2fe668743b4d0e
# Vim: https://www.vim.org/download.php
vim_version=8.1
# GSL: https://github.com/Microsoft/GSL/releases
gsl_version=v2.0.0
# Catch2: https://github.com/catchorg/Catch2/releases
catch_version=v2.5.0
# Lcov: https://github.com/linux-test-project/lcov
lcov_version=28675dc7564aaa1ad231a7ac23106512a3956d68

# Vim LSP: https://github.com/prabirshrestha/vim-lsp.git
vimlsp_version=d6891ade6fb1f0d1780adc3ac1a8e99362075de4
# Async: https://github.com/prabirshrestha/async.vim.git
vimlsp_async_version=8eae0c4d5df9cadfdce2029823c599098b16fac3
# Asyncomplete: https://github.com/prabirshrestha/asyncomplete.vim.git
vimlsp_ac_version=b5dbe40222172b0901c06f1f90c597ef782b1b82
# Asyncomplete LSP: https://github.com/prabirshrestha/asyncomplete-lsp.vim.git
vimlsp_aclsp_version=6f47fcb2f386c6234f65a9450c3a3c141759a8f3

################################################################################
# Utility functions.
################################################################################

panic()
{
	echo "FATAL ERROR: $@" 1>&2
	exit 1
}

eprint()
{
	echo "$@" 1>&2
}

usage()
{
	echo "BAD USAGE: $@" 1>&2
	cat <<- EOF
	usage: $0 [options]
	options:
	-d sde_top_dir
	    Set the top-level directory to top_dir.
	-e default_environment
	    Set the default environment to default_environment.
	-f
	    Allow the use of an existing directory.
	examples:
	    ./installer -d /usr/local/sde -e default
	EOF
	exit 2
}

################################################################################
#
################################################################################

cmd_dir=$(dirname $0) || panic "cannot get command directory"
bin_dir="$cmd_dir/bin"

sde_cmd="$bin_dir/sde"
sde_relpath="$bin_dir/sde_relpath"
sde_install_cmake="$bin_dir/sde_install_cmake"
sde_install_gcc="$bin_dir/sde_install_gcc"
sde_install_clang="$bin_dir/sde_install_clang"
sde_install_boost="$bin_dir/sde_install_boost"
sde_install_texlive="$bin_dir/sde_install_texlive"
sde_download_texlive_iso="$bin_dir/sde_download_texlive_iso"
sde_install_texlive_iso="$bin_dir/sde_install_texlive_iso"
sde_install_jasper="$bin_dir/sde_install_jasper"
sde_install_gdb="$bin_dir/sde_install_gdb"
sde_install_spl="$bin_dir/sde_install_spl"
sde_install_ndiff="$bin_dir/sde_install_ndiff"
sde_install_aristotle="$bin_dir/sde_install_aristotle"
sde_install_ycm="$bin_dir/sde_install_ycm"
sde_install_vim="$bin_dir/sde_install_vim"
sde_install_gsl="$bin_dir/sde_install_gsl"
sde_install_catch="$bin_dir/sde_install_catch"
sde_install_lcov="$bin_dir/sde_install_lcov"
sde_install_vimlsp="$bin_dir/sde_install_vimlsp"
sde_install_cgal="$bin_dir/sde_install_cgal"

################################################################################
# Process command line
################################################################################

default_environment=
force=0
sde_top_dir=""
clean=0

while getopts d:fe:c opt; do
	case "$opt" in
	d)
		sde_top_dir="$OPTARG";;
	e)
		default_environment="$OPTARG";;
	c)
		clean=1;;
	f)
		force=1;;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$sde_top_dir" ]; then
	usage "no top directory specified"
fi

if [ "$force" -eq 0 -a -d "$sde_top_dir" ]; then
	panic "top directory already exists $sde_top_dir"
fi

################################################################################
# START OF INSTALLATION
################################################################################

cat <<- EOF
============================================================
Starting SDE Installation
Time: $(date +"%Y-%m-%d %H:%M:%S")
============================================================
EOF

boot_dir="$sde_top_dir/bootstrap"
packages_dir="$sde_top_dir/packages"
ycm_extras_dir="$packages_dir/ycm_extras"

enable_texlive_install="${SDE_TEXLIVE_INSTALL:-1}"

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

################################################################################
################################################################################
################################################################################
################################################################################

generic_sdebase_dir="$packages_dir/sdebase"
sdebase_dir="$packages_dir/sdebase-default"
cmake_dir="$packages_dir/cmake-$cmake_version"
gcc_dir="$packages_dir/gcc-$gcc_version"
gcc_bin_dir="$gcc_dir/bin"
clang_dir="$packages_dir/clang-$clang_version"
boost_dir="$packages_dir/boost-$boost_version"
texlive_dir="$packages_dir/texlive-$texlive_version"
texlive_iso_dir="$packages_dir/texlive_iso-$texlive_version"
jasper_dir="$packages_dir/jasper-$jasper_version"
gdb_dir="$packages_dir/gdb-$gdb_version"
spl_dir="$packages_dir/SPL-$spl_version"
ndiff_dir="$packages_dir/ndiff-$ndiff_version"
aristotle_dir="$packages_dir/aristotle-$aristotle_version"
ycm_dir="$packages_dir/ycm-$ycm_version"
vim_dir="$packages_dir/vim-$vim_version"
gsl_dir="$packages_dir/gsl-$gsl_version"
catch_dir="$packages_dir/catch-$catch_version"
lcov_dir="$packages_dir/lcov-$lcov_version"
vimlsp_dir="$packages_dir/vimlsp-$vimlsp_version"
cgal_dir="$packages_dir/CGAL-$cgal_version"

gcc_install_options=()
if [ "${SDE_GCC_USE_OLD_ABI:-0}" -ne 0 ]; then
	gcc_install_options+=(-o old_abi)
else
	gcc_install_options+=(-o new_abi)
fi

if [ "${SDE_VIM_INSTALL:-1}" -eq 0 ]; then
	vim_dir=
fi
if [ "${SDE_CGAL_INSTALL:-0}" -eq 0 ]; then
	cgal_dir=
fi

################################################################################
# Perform any cleaning.
################################################################################

if [ "$clean" -ne 0 ]; then

	echo "Cleaning"

	if [ -d "$sdebase_dir" ]; then
		rm -rf "$sdebase_dir" || panic
	fi

	dirs=()
	dirs+=(bin)
	dirs+=(doc)
	dirs+=(etc)
	for dir in "${dirs[@]}"; do
		target_dir="$sde_top_dir/$dir"
		if [ -d "$target_dir" ]; then
			rm -rf "$target_dir" || \
			  panic "cannot remove directory $target_dir"
		fi
	done

fi

################################################################################
# Install SDE Base
################################################################################

sdebase_installed=0
if [ ! -d "$sdebase_dir" ]; then

	sdebase_installed=1

	files=()
	files+=($(cd "$cmd_dir" && find bin -type f))
	files+=($(cd "$cmd_dir" && find doc -type f))
	files+=($(cd "$cmd_dir" && find etc -type f))
	for file in ${files[@]}; do
		dir=$(dirname "$file") || panic "cannot get directory of $file"
		#echo "processing $file $dir"
		mode="r"
		case "$file" in
		bin/*)
			case "$file" in
			bin/sde_shell_bashrc)
				;;
			*)
				mode="rx";;
			esac
		esac
		target_dir="$sdebase_dir/$dir"
		if [ ! -d "$target_dir" ]; then
			mkdir -p "$target_dir" || panic "cannot make directory $target_dir"
		fi
		#echo "installing $cmd_dir/$file $sdebase_dir/$file"
		install -m a+"$mode" "$cmd_dir/$file" "$sdebase_dir/$file" || \
		  panic "cannot install file $file"
	done
fi

################################################################################
# Perform other SDE installation
################################################################################

for dir in bin doc etc etc/environments; do
	if [ ! -d "$sde_top_dir/$dir" ]; then
		mkdir -p "$sde_top_dir/$dir" || \
		  panic "cannot make directory $dir"
	fi
done

if [ "$sdebase_installed" -ne 0 ]; then

	# executables in $sde_top_dir/bin directory
	files=()
	files+=($(cd "$sdebase_dir" && find bin -type f))
	files+=($(cd "$sdebase_dir" && find doc -type f))
	files+=($(cd "$sdebase_dir" && find etc -type f))
	for file in "${files[@]}"; do
		source_file="$generic_sdebase_dir/$file"
		destination_file="$sde_top_dir/$file"
		destination_dir=$(dirname "$destination_file") || \
		  panic "cannot get directory of $destination_file"
		if [ -L "$destination_file" -o -e "$destination_file" ]; then
			rm -f "$destination_file" || \
			  panic "cannot remove file $destination_file"
		fi
		relpath=$("$sde_relpath" -r "$destination_dir" "$source_file") || \
		  panic "cannot get relative path"
		ln -s "$relpath" "$destination_file" || \
		  panic "cannot link"
	done

	for file in c++ g++ clang++ cc gcc clang cmake ctest cpack gdb; do
		target_file="$sde_top_dir/bin/$file"
		if [ -L "$target_file" -o -e "$target_file" ]; then
			rm -f "$target_file" || panic "cannot remove file $target_file"
		fi
		ln -s sde_wrapper "$target_file" || \
		  panic "cannot link"
	done

	"$sde_cmd" pkg -d "$sde_top_dir" "sdebase" default || \
	  panic "cannot set package version"

fi

if [ -n "$default_environment" ]; then
	"$sde_cmd" env -d "$sde_top_dir" "$default_environment" || \
	  panic "cannot set default environment"
fi

################################################################################
# Install YCM Extras
################################################################################

if [ -n "$ycm_extras_dir" ]; then
	if [ ! -d "$ycm_extras_dir" ]; then

		for dir in "$ycm_extras_dir"; do
			if [ ! -d "$dir" ]; then
				mkdir -p "$dir" || \
				  panic "cannot make directory $dir"
			fi
		done

		# YCM Extras
		ycm_extra_conf_file="$ycm_extras_dir/.ycm_extra_conf.py"
		if [ -f "$ycm_extra_conf_file" ]; then
			rm -f "$ycm_extra_conf_file" || \
			  panic "cannot remove file $ycm_extra_conf_file"
		fi
		sed -e 's%@@SDE_TOP_DIR@@%'"$sde_top_dir"'%g' \
		  < "$cmd_dir/etc/ycm_extra_conf.py.template" \
		  > "$ycm_extra_conf_file" || panic "cannot create file"

	fi
fi

cat <<- EOF
============================================================
SDE installation complete, step 1
Time: $(date +"%Y-%m-%d %H:%M:%S")
============================================================
EOF
